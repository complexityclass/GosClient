package com.example.client;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import org.apache.http.HttpException;
import org.htmlcleaner.TagNode;

import com.example.http.MyHttpClientUsage;
import com.example.http.NetworkStats;
import com.example.parser.HtmlParser;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.Gravity;
import android.widget.ListView;
import android.widget.SimpleAdapter;

public class AgenciesActivity extends Activity {

	public List<String> linksText;
	public List<Integer> pics;

	@Override
	public void onCreate(Bundle savedInstanceState) {

		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		linksText = new ArrayList<String>();
		pics = new ArrayList<Integer>();
		
	}
	
	/**Send request in separate thread using AsyncTask*/
	private class DownloadHtml extends AsyncTask<String, Integer, String> {
		String result = "";

		@Override
		protected String doInBackground(String... urls) {
			try {
				result = NetworkStats.getOutputFromURL(urls[0]);
			} catch (Exception e) {
				Log.d("Background Task", e.toString());
			}
			return result;
		}

		@Override
		protected void onPostExecute(String result) {
			HtmlParser parser;
			StringBuilder resultBuilder = new StringBuilder();
			try {
				//parsing html to get all <div> tag source
				parser = new HtmlParser(result);
				List<TagNode> links = parser.getLinks("category-menu_link");
				for (Iterator<TagNode> iterator = links.iterator(); iterator
						.hasNext();) {

					TagNode linkElement = (TagNode) iterator.next();
					linksText.add(linkElement.getText().toString());			
				}
			} catch (Exception e) {
				e.printStackTrace();
			}

			String plainText = resultBuilder.toString();
			

		}
		

}
