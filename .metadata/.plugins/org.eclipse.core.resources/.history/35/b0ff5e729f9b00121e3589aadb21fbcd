package com.example.client;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutionException;

import org.htmlcleaner.TagNode;

import com.example.adapters.CustomExpandableListAdapter;
import com.example.adapters.TupleAB;
import com.example.http.NetworkStats;
import com.example.parser.HtmlParser;

import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Activity;
import android.util.Log;
import android.view.Menu;
import android.widget.ExpandableListView;

public class ExpandableListActivity extends Activity {

	String url = "http://pgu.khv.gov.ru/?a=Citizens&category=Regional&catalog=770";
	ArrayList<ArrayList<String>> listChilds;
	ArrayList<String> listGroups;
	

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.exp_list_view_layout);
		
		DownloadListChilds downloadListChilds = new DownloadListChilds();
		downloadListChilds.execute(url);

		try {
			listChilds = downloadListChilds.get();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ExecutionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		ExpandableListView listView = (ExpandableListView) findViewById(R.id.exListView);
		CustomExpandableListAdapter adapter = new CustomExpandableListAdapter(getApplicationContext(), maper);
		listView.setAdapter(adapter);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.expandable_list, menu);
		return true;
	}

	/** Send request in separate thread using AsyncTask */

	private class DownloadListChilds extends AsyncTask<String, Integer, ArrayList<ArrayList<String>>> {

		ArrayList<ArrayList<String>> childList;

		@Override
		protected ArrayList<ArrayList<String>> doInBackground(String... urls) {
			try {
				String result = NetworkStats.getOutputFromURL(urls[0]);

				HtmlParser parser;
				try {
					parser = new HtmlParser(result);
					List<TagNode> links = parser.getObjectByTagAndClass("i", "slide-tabs_left");
					for (Iterator<TagNode> iterator = links.iterator(); iterator.hasNext();) {
						TagNode linkElement = (TagNode) iterator.next();
						List<TagNode> childElements = linkElement.getChildren();
						ArrayList<String> listChild = new ArrayList<String>();
						for(Iterator<TagNode> iterator2 = childElements.iterator(); iterator2.hasNext();){
							TagNode children = (TagNode) iterator2.next();
							listChild.add(children.getText().toString());
						}
						childList.add(listChild);
					}
				} catch (Exception e) {
					e.printStackTrace();
				}

			} catch (Exception e) {
				Log.d("Background Task", e.toString());
			}
			return childList;
		}

		@Override
		protected void onPostExecute(ArrayList<ArrayList<String>> lister) {

		}

	}

}
