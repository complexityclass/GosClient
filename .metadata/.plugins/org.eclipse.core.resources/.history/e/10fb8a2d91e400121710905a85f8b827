package com.example.http;

import java.io.IOException;
import java.net.Socket;
import java.security.KeyStore;
import java.security.NoSuchAlgorithmException;
import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;

import javax.net.ssl.SSLContext;
import javax.net.ssl.TrustManager;
import javax.net.ssl.X509TrustManager;

public class MySSLSocketFactory extends SSLSocketFactory {
	
	SSLContext sslContext = SSLContext.getInstance("TLS");
	
	public MySSLSocketFactory(KeyStore truststore) throws NoSuchAlgorithmException{
		
		super(truststore);
		
		new SSlSoc
		
		TrustManager tm = new X509TrustManager() {
			
			public X509Certificate[] getAcceptedIssuers() {
				return null;
			}
			
			public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {
			}
			
			public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {
			}
		};
		
		sslContext.init(null, new TrustManager[] {tm}, null);
		
	}

	@Override
	public Socket createSocket(Socket s, String host, int port, boolean autoClose) throws IOException {
		return sslContext.getSocketFactory().createSocket(s, host, port, autoClose);
	}

	@Override
	public Socket createSocket() throws IOException {
		 return sslContext.getSocketFactory().createSocket();
	}
	
	

}
