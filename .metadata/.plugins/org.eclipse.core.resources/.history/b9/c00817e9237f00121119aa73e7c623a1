package com.example.client;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.ExecutionException;

import org.apache.http.HttpException;
import org.htmlcleaner.TagNode;

import com.example.http.GetDataListener;
import com.example.http.MyHttpClientUsage;
import com.example.http.NetworkStats;
import com.example.parser.HtmlParser;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.Gravity;
import android.widget.ListView;
import android.widget.SimpleAdapter;

/**
 * @author complexityclass Activity "Ведомства"
 */
public class AgenciesActivity extends Activity {

	public List<String> linksText;
	public List<Integer> pics;
	public String myHTML = "";
	/** URL for GET request */
	private static final String PAGE_URL = "http://pgu.khv.gov.ru/?a=Departments&category=Regional";

	@Override
	public void onCreate(Bundle savedInstanceState) {

		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		linksText = new ArrayList<String>();
		pics = new ArrayList<Integer>();

		if (NetworkStats.isNetworkAvailable(this)) {
			DownloadHtml downloadHtml = new DownloadHtml();
			downloadHtml.execute(PAGE_URL);
			try {
				myHTML = downloadHtml.get();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (ExecutionException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		System.out.println(myHTML);

		// Parsing html
		HtmlParser parser;
		StringBuilder result = new StringBuilder();

		try {
			parser = new HtmlParser(myHTML);
			List<TagNode> links = parser.getLinks("category-menu_link");
			for (Iterator<TagNode> iterator = links.iterator(); iterator
					.hasNext();) {
				TagNode linkElement = (TagNode) iterator.next();
				linksText.add(linkElement.getText().toString());
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		List<HashMap<String, String>> aList = new ArrayList<HashMap<String, String>>();

		for (int i = 0; i < linksText.size() - 1; i++) {
			HashMap<String, String> hm = new HashMap<String, String>();
			hm.put("txt", "link : " + linksText.get(i));
			hm.put("pic", Integer.toString(pics.get(i)));
			aList.add(hm);
		}

		String[] from = { "txt", "pic" };
		int[] to = { R.id.txt, R.id.pic };

		SimpleAdapter adapter = new SimpleAdapter(getBaseContext(), aList,
				R.layout.links_listview, from, to);
		ListView listView = (ListView) findViewById(R.id.listview);
		listView.setAdapter(adapter);

	}

	/** Send request in separate thread using AsyncTask */
	private class DownloadHtml extends AsyncTask<String, Integer, String> {

		String result = "";

		@Override
		protected String doInBackground(String... urls) {
			try {
				result = NetworkStats.getOutputFromURL(urls[0]);
			} catch (Exception e) {
				Log.d("Background Task", e.toString());
			}
			return result;
		}

		@Override
		protected void onPostExecute(String result) {

		}

	}
}
